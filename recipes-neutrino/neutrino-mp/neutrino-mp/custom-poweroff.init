#!/bin/sh
#
# for platforms without proper hwclock support, this script is called
# before "halt" and can use an alternative method of shutting down
#
PATH=/sbin:/bin:/usr/sbin:/usr/bin
TIMER="/dev/shm/.timer"

# just to make sure we don't accidentally switch off the box
if test x"$1" != xstop; then
	echo "$0 called without stop parameter!"
	exit 0
fi

test -e $TIMER || exit 0

# TODO: more platforms
# coolstream custom poweroff binary
if type uncooloff > /dev/null; then
	PARAM=`cat $TIMER`
	# this is necessary because the kernel does not do it
	# when shut down via uncooloff
	echo "shutting down harddrives"
	hdparm -y /dev/sd*[^0-9] 2>/dev/null # only sda, not sda1
	echo "calling 'uncooloff "$PARAM"'"
	uncooloff $PARAM
	# we should not come here :-)
fi
## platforms with proper hwclock
## sysfs is often already unmounted here...
mount -t sysfs sysfs /sys 2>/dev/null
## this is right now only tested on spark...
if test -e /sys/class/rtc/rtc0/wakealarm; then
	read RTC_NOW < /sys/class/rtc/rtc0/since_epoch
	NOW=$(date +%s)
	OFFSET=$((RTC_NOW - NOW)) # offset between UTC and localtime
	read WAKEUP < $TIMER
	WAKEUP=$((WAKEUP + OFFSET))
	echo "setting wakeup time to $WAKEUP (NOW: $RTC_NOW, OFFSET: $OFFSET)"
	if test $WAKEUP -lt $((RTC_NOW + 30)); then
		WAKEUP=$((RTC_NOW + 30))
		echo "correcting WAKEUP to $WAKEUP"
	fi
	echo $WAKEUP > /sys/class/rtc/rtc0/wakealarm
fi

# fallthrough, so that regular "halt" script will kick in
exit 0
